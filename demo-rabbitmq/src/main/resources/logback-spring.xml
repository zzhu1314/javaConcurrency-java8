<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">
	<contextName>logback</contextName>
	<property name="log.path" value="log/logback.log" />
	<property name="error.path" value="log/error.log"/>
	<!-- 输出到控制台 -->
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<!-- 控制台的输出级别 -->
			<level>DEBUG</level>
		</filter>
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
	</appender>
	<!--输出到文件 -->
	<appender name="file"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.path}</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 最多保存30天的日志，切不能超过1G -->
			<fileNamePattern>${log.path}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<maxHistory>30</maxHistory>
			<maxFileSize>8MB</maxFileSize>
			<totalSizeCap>2GB</totalSizeCap>


		</rollingPolicy>
		<encoder charset="UTF-8">
			<pattern>PID{${PID}}-%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} [%file : %line] -%msg%n</pattern>
		</encoder>
	</appender>
	<!--输出错误日志到文件 -->
	<appender name="file_error"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- 级别过滤器 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<!-- 设置过滤级别 -->
			<level>ERROR</level>
			<!-- 用于配置符合过滤条件的操作 -->
			<onMatch>ACCEPT</onMatch>
			<!-- 用于配置不符合过滤条件的操作 -->
			<onMismatch>DENY</onMismatch>
		</filter>
		<file>${error.path}</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<!-- 最多保存30天的日志，切不能超过1G -->
			<fileNamePattern>${error.path}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<maxHistory>30</maxHistory>
			<maxFileSize>8MB</maxFileSize>
			<totalSizeCap>2GB</totalSizeCap>


		</rollingPolicy>
		<encoder charset="UTF-8">
			<pattern>PID{${PID}}-%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} [%file : %line] -%msg%n</pattern>
		</encoder>
	</appender>
	<!-- 异步输出 -->
	<!-- <appender name="async" class="ch.qos.logback.classic.AsyncAppender"> 
		不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 <discardingThreshold>0</discardingThreshold> 
		更改默认的队列的深度,该值会影响性能.默认值为256 <queueSize>512</queueSize> 添加附加的appender,最多只能添加一个 
		<appender-ref ref="file" /> </appender> -->
	<root level="info">
		<appender-ref ref="console" />
		<appender-ref ref="file" />
		<appender-ref ref="file_error"/>
	</root>
	<!-- 配置 -->
	<logger name="com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver" level="warn" additivity="false">
		<appender-ref ref="file" />
		<!-- <appender-ref ref="LOGSTASH" /> -->
	</logger>
	<!-- 配置face下的包的所有的打印级别，没有level 就跟root样默认为info -->
	<logger name="com.cigit" level="trace" additivity="false">
		<appender-ref ref="console" />
		<appender-ref ref="file" />
		<appender-ref ref="file_error"/>
	</logger>
	<!-- <logger name="com.cigit.face.web.TestController" level="WARN" additivity="false"> 
		<appender-ref ref="console" /> </logger> -->
	<!-- 配置多开发环境下的log打印 -->
	<!-- <springProfile name="test,dev"> <logger name="com.cigit.web" level="info" 
		/> </springProfile> <springProfile name="prod"> <logger name="com.cigit.web" 
		level="ERROR" /> </springProfile> -->
</configuration> 